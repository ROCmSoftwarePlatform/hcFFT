# Object libraries require CMAKE 2.8.8 version 
CMAKE_MINIMUM_REQUIRED (VERSION 2.8.8) 
MESSAGE(STATUS "CMAKE VERSION ${CMAKE_VERSION}")

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/../../cmake ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

# Find HCC compiler
FIND_PACKAGE(HC++ 1.0 REQUIRED)


#Setting a Project name
SET(PROJECT_NAME "libhcfft")
PROJECT (${PROJECT_NAME})
MESSAGE(STATUS "PROJECT NAME    : ${PROJECT_NAME}")

#Setting a variable for source files
SET (SRCS
    stockham.cpp 
    transform.cpp
    copy.cpp
    transpose.cpp
    )

IF(WIN32)
  #include the additional libraries 
  #settings->c/c++->general->additional directories 
  SET(SRCS ${SRCS})
  ADD_DEFINITIONS(-D__LITTLE_ENDIAN__)
  ADD_DEFINITIONS(-DTARGET_OS_WIN32=1)
    
  IF(MSVC)
    ADD_DEFINITIONS(/W3)
    ADD_EXECUTABLE(${PROJECT_NAME} ${SRCS})
    INSTALL(TARGETS ${PROJECT_NAME} DESTINATION lib)
  ELSE(MSVC)
    MESSAGE(FATAL_ERROR "TARGET IDE ISNT VISUAL STUDIO 11/12.... EXITING")
  ENDIF(MSVC)
ELSE(WIN32)
  # Choice to take compilation flags from source or package
  if(EXISTS ${MCWHCCBUILD})
    execute_process(COMMAND ${CLAMP_CONFIG} --build --cxxflags
                            OUTPUT_VARIABLE CLAMP_CXXFLAGS)
    execute_process(COMMAND ${CLAMP_CONFIG} --build --ldflags --shared
                            OUTPUT_VARIABLE CLAMP_LDFLAGS)
  else(EXISTS ${MCWHCCBUILD})
    execute_process(COMMAND ${CLAMP_CONFIG} --cxxflags
                            OUTPUT_VARIABLE CLAMP_CXXFLAGS)
    execute_process(COMMAND ${CLAMP_CONFIG} --ldflags --shared
                            OUTPUT_VARIABLE CLAMP_LDFLAGS)
  endif(EXISTS ${MCWHCCBUILD})

  
  string(STRIP "${CLAMP_CXXFLAGS}" CLAMP_CXXFLAGS)
  string(STRIP "${CLAMP_LDFLAGS}" CLAMP_LDFLAGS)
  set (CLAMP_CXXFLAGS "${CLAMP_CXXFLAGS}")
  set (CLAMP_LDFLAGS "${CLAMP_LDFLAGS}")

  FOREACH(src_file ${SRCS})
    SET_PROPERTY(SOURCE ${src_file} APPEND_STRING PROPERTY COMPILE_FLAGS " ${CLAMP_CXXFLAGS}")
  ENDFOREACH()

  ADD_EXECUTABLE("${PROJECT_NAME}.so" ${SRCS})
  SET_PROPERTY(TARGET "${PROJECT_NAME}.so" APPEND_STRING PROPERTY LINK_FLAGS " ${CLAMP_LDFLAGS}")
  INSTALL(TARGETS "${PROJECT_NAME}.so" DESTINATION "/usr/lib/")
  INSTALL(FILES hcfftlib.h lock.h stockham.h  DESTINATION include)

ENDIF(WIN32)
